<?xml version='1.0'?>
<sdf version='1.6'>
  <model name='gimbal_small_2d'>
    <pose>0 0 0.18 0 0 0</pose>

    <link name="dummy_iris::iris_demo::gimbal_small_2d::tilt_link"></link>
    <link name="dummy_iris::iris_demo::iris::base_link"></link>

    <!-- add new camera -->
      <link name='camera'>
        <pose>0 -0.01 0.070 1.57 0 1.57</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.001</iyy>
            <iyz>0</iyz>
            <izz>0.001</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.025</radius>
              <length>0.025</length>
            </cylinder>
          </geometry>
           <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>

        <sensor name="camera" type="camera">
          <pose>0 0 0 -1.57 -1.57 0</pose>
          <camera>
            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>1000</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>true</visualize>

          <!--  <plugin name="irlock" filename="libArduCopterIRLockPlugin.so">
              <fiducial>irlock_beacon_01</fiducial>
          </plugin> -->
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>webcam</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>

        </sensor>
      </link>

        <!-- attach camera -->
        <joint type="revolute" name="base_camera_joint">
          <pose>0 0 0.0 0 0 0</pose>
          <parent>iris::iris_demo::gimbal_small_2d::tilt_link</parent>
          <child>camera</child>
          <axis>
            <limit>
              <lower>0</lower>
              <upper>0</upper>
            </limit>
            <xyz>0 0 1</xyz>
            <use_parent_model_frame>true</use_parent_model_frame>
          </axis>
        </joint>

        <joint name="hokuyo_joint" type="fixed">
            <pose>0 0 0 0 0 0</pose>
            <parent>iris::iris_demo::iris::base_link</parent>
            <child>hokuyo_link</child>
        </joint>

         <!--add lidar-->
        <link name="hokuyo_link">
          <pose>0 0 0 0 0 0</pose>
          <collision name="collision">
            <pose>0 0 0.3 0 0 0</pose>
            <geometry>
              <box>
                <size>0.1 0.1 0.1</size>
              </box>
            </geometry>
          </collision>
          <visual name="visual">
            <pose>0 0 0.27 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://hokuyo/meshes/hokuyo.dae</uri>
              </mesh>
            </geometry>
          </visual>
          <inertial>
            <mass>0.016</mass>
            <inertia>
                <ixx>0.0001</ixx>
                <ixy>0</ixy>
                <ixz>0</ixz>
                <iyy>0.0001</iyy>
                <iyz>0</iyz>
                <izz>0.0001</izz>
                <!-- low intertia necessary to avoid not disturb the drone -->
            </inertia>
          </inertial>

          <sensor type="ray" name="laser">
            <pose>0 0 0.3 0 0 1.57</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <samples>1024</samples>
                  <resolution>1</resolution>
                  <min_angle>-3.141593</min_angle>
                  <max_angle>3.141593</max_angle>
                </horizontal>
              </scan>
              <range>
                <min>0.1</min>
                <max>30</max>
                <resolution>0.1</resolution>
              </range>
              <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise>
            </ray>
            <plugin name="hokuyo_ros_laser" filename="libgazebo_ros_laser.so">
              <robotNamespace></robotNamespace>
              <topicName>/spur/laser/scan</topicName>
              <frameName>hokuyo_link</frameName>
            </plugin>
          </sensor>
        </link>
  </model>
</sdf>